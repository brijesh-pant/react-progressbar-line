{"version":3,"sources":["../../src/config/theme.js","../../src/components/Svg.js","../../src/hooks/usePath.js","../../src/constants.js","../../src/hooks/useStrokeDashOffset.js","../../src/components/Path.js","../../src/components/Text.js","../../src/components/ProgressBarLine.js","../../src/utils.js","../../src/index.js","App.js","index.js"],"names":["theme","base","path","stroke","strokeLinecap","trail","text","fill","textAlign","fontSize","StyledSvg","styled","Svg","children","strokeWidth","viewBox","usePath","min","max","value","trailWidth","flip","React","dashArray","setDashArray","draw","setDraw","x1","x2","center","Math","pathEl","dashOffset","setDashOffset","parseInt","useStrokeDashOffset","PropTypes","isRequired","StyledPath","props","Path","ref","strokeDashArray","strokeDashOffset","getStrokeWidth","d","bool","StyledText","Text","renderText","number","ProgressBarLine","propValue","styles","setValue","safeValue","calculateSafeValue","Object","ExampleComponent","className","App","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae88fc53.chunk.js","sourcesContent":["const theme = {\n  base: {},\n  path: {\n    stroke: '#01a09e',\n    strokeLinecap: 'butt'\n  },\n  trail: {\n    stroke: '#d6d6d6',\n    strokeLinecap: 'butt'\n  },\n  text: {\n    fill: '#01a09e',\n    textAlign: 'center',\n    fontSize: '16px'\n  }\n}\n\nexport default theme\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { VIEWBOX_WIDTH } from '../constants'\n\nconst StyledSvg = styled.svg`\n  width: 100%;\n  display: block;\n`\n\nconst Svg = ({ children, strokeWidth }) => {\n  return (\n    <StyledSvg viewBox={`0 0 ${VIEWBOX_WIDTH} ${strokeWidth}`}>\n      {children}\n    </StyledSvg>\n  )\n}\n\nSvg.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default Svg\n","import React from 'react'\n\nimport useStrokeDashOffset from './useStrokeDashOffset'\n\nimport { VIEWBOX_X1, VIEWBOX_X2 } from '../constants'\n\nexport default function usePath({\n  min,\n  max,\n  value,\n  strokeWidth,\n  trailWidth,\n  flip\n}) {\n  const [dashArray, setDashArray] = React.useState(max)\n  const [draw, setDraw] = React.useState('')\n\n  const x1 = flip ? VIEWBOX_X2 : VIEWBOX_X1\n  const x2 = flip ? VIEWBOX_X1 : VIEWBOX_X2\n\n  React.useEffect(() => {\n    const center =\n      (strokeWidth > trailWidth\n        ? Math.max(strokeWidth, trailWidth)\n        : Math.min(strokeWidth, trailWidth)) / 2\n\n    setDraw(`\n      M ${x1},${center}\n      L ${x2},${center}\n    `)\n  }, [strokeWidth, trailWidth])\n\n  const ref = React.useCallback(\n    (pathEl) => {\n      if (pathEl !== null) {\n        setDashArray(pathEl.getTotalLength())\n      }\n    },\n    [draw]\n  )\n\n  return [\n    ref,\n    draw,\n    dashArray,\n    ...useStrokeDashOffset({ min, max, value, dashArray })\n  ]\n}\n","export const VIEWBOX_WIDTH = 100\nexport const VIEWBOX_HEIGHT = 100\nexport const VIEWBOX_X1 = 0\nexport const VIEWBOX_X2 = 100\n","import React from 'react'\n\nexport default function useStrokeDashOffset({ min, value, dashArray }) {\n  const [dashOffset, setDashOffset] = React.useState(min)\n\n  React.useEffect(() => {\n    const dashOffset = Math.abs(dashArray - parseInt(value, 10))\n    setDashOffset(dashOffset)\n  }, [value, dashArray])\n\n  return [dashOffset]\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport usePath from '../hooks/usePath'\n\nconst StyledPath = styled.path`\n  stroke: ${({ theme, trail }) =>\n    trail ? theme.trail.stroke : theme.path.stroke};\n  stroke-linecap: ${({ theme, trail }) =>\n    trail ? theme.trail.strokeLinecap : theme.path.strokeLinecap};\n  stroke-dasharray: ${(props) => props.strokeDashArray};\n  stroke-dashoffset: ${(props) => props.strokeDashOffset};\n`\n\nconst Path = ({ value, min, max, strokeWidth, trail, trailWidth, flip }) => {\n  const [ref, draw, strokeDashArray, strokeDashOffset] = usePath({\n    min,\n    max,\n    value,\n    strokeWidth,\n    trailWidth,\n    flip\n  })\n\n  const getStrokeWidth = React.useMemo(() => {\n    if (trail) {\n      return trailWidth >= strokeWidth ? strokeWidth : trailWidth\n    }\n    return strokeWidth\n  }, [trail, trailWidth, strokeWidth])\n\n  return (\n    <StyledPath\n      ref={ref}\n      d={draw}\n      strokeDashArray={strokeDashArray}\n      strokeDashOffset={strokeDashOffset}\n      strokeWidth={getStrokeWidth}\n      trail={trail}\n    />\n  )\n}\n\nPath.defaultProps = {\n  strokeWidth: 2,\n  trailWidth: 2,\n  trail: false,\n  flip: false\n}\n\nPath.propTypes = {\n  strokeWidth: PropTypes.number,\n  trail: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.PropTypes.number]),\n  flip: PropTypes.bool\n}\n\nexport default Path\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst StyledText = styled.span`\n  color: ${(props) => props.theme.text.fill};\n  display: block;\n  text-align: ${(props) => props.theme.text.textAlign};\n  font-size: ${(props) => props.theme.text.fontSize};\n`\n\nconst Text = ({ text, value }) => {\n  const renderText = text || `${Math.round(value)}%`\n\n  return <StyledText>{renderText}</StyledText>\n}\n\nText.defaultProps = {\n  text: ''\n}\n\nText.propTypes = {\n  text: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  value: PropTypes.number\n}\n\nexport default Text\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { ThemeProvider } from 'styled-components'\n\nimport { VIEWBOX_X2 } from '../constants'\n\nimport baseStyles from '../config/theme'\nimport { calculateSafeValue } from '../utils'\n\nimport Svg from './Svg'\nimport Path from './Path'\nimport Text from './Text'\n\nconst ProgressBarLine = ({\n  value: propValue,\n  min,\n  max,\n  strokeWidth,\n  trailWidth,\n  text,\n  flip,\n  styles\n}) => {\n  const [value, setValue] = React.useState(max)\n\n  React.useEffect(() => {\n    const safeValue = calculateSafeValue({ min, max, propValue })\n    setValue(((safeValue - min) * VIEWBOX_X2) / (max - min))\n  }, [propValue])\n\n  const theme = Object.assign({}, baseStyles, styles)\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Text text={text} value={value} />\n      <Svg strokeWidth={strokeWidth}>\n        <Path\n          trail\n          value={VIEWBOX_X2}\n          min={min}\n          max={max}\n          strokeWidth={strokeWidth}\n          trailWidth={trailWidth}\n        />\n        <Path\n          value={value}\n          min={min}\n          max={max}\n          strokeWidth={strokeWidth}\n          trailWidth={trailWidth}\n          flip={flip}\n        />\n      </Svg>\n    </ThemeProvider>\n  )\n}\n\nProgressBarLine.defaultProps = {\n  value: 50,\n  min: 0,\n  max: 100,\n  strokeWidth: 5,\n  trailWidth: 5\n}\n\nProgressBarLine.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.PropTypes.number])\n    .isRequired,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  strokeWidth: PropTypes.number,\n  trailWidth: PropTypes.number\n}\n\nexport default ProgressBarLine\n","export const calculateSafeValue = ({ min, max, propValue }) => {\n  if (propValue >= max) {\n    return max\n  }\n  if (propValue <= min) {\n    return min\n  }\n  if (propValue >= min || propValue <= max) {\n    return propValue\n  }\n}\n","import React from 'react'\n\nimport ProgressBarLine from './components/ProgressBarLine'\n\nimport styles from './styles.module.css'\n\nexport const ExampleComponent = ({ text }) => {\n  return <div className={styles.test}>{text}</div>\n}\n\nexport { ProgressBarLine }\n","import React from 'react'\n\nimport { ExampleComponent, ProgressBarLine } from 'react-progressbar-line'\nimport 'react-progressbar-line/dist/index.css'\n\nconst App = () => {\n  return (\n    <>\n      <ExampleComponent text='React ProgressBarLine' />\n      <div className='container'>\n        <div className='half'>\n          <pre>\n            <code>\n              {`\n    <ProgressBarLine\n      value={75}\n    />`}\n            </code>\n          </pre>\n        </div>\n        <div className='half half-example'>\n          <div id='svg-container'>\n            <ProgressBarLine value={75} />\n          </div>\n        </div>\n      </div>\n      <div className='container'>\n        <div className='half'>\n          <pre>\n            <code>\n              {`\n    <ProgressBarLine\n      value={75}\n      min={50}\n      max={100}\n    />`}\n            </code>\n          </pre>\n        </div>\n        <div className='half half-example'>\n          <div id='svg-container'>\n            <ProgressBarLine value={75} min={50} max={100} />\n          </div>\n        </div>\n      </div>\n      <div className='container'>\n        <div className='half'>\n          <pre>\n            <code>\n              {`\n    <ProgressBarLine\n      value={125}\n      min={0}\n      max={200}\n    />`}\n            </code>\n          </pre>\n        </div>\n        <div className='half half-example'>\n          <div id='svg-container'>\n            <ProgressBarLine value={125} min={0} max={200} />\n          </div>\n        </div>\n      </div>\n      <div className='container'>\n        <div className='half'>\n          <pre>\n            <code>\n              {`\n    <ProgressBarLine\n      strokeWidth={10}\n    />`}\n            </code>\n          </pre>\n        </div>\n        <div className='half half-example'>\n          <div id='svg-container'>\n            <ProgressBarLine strokeWidth={10} />\n          </div>\n        </div>\n      </div>\n      <div className='container'>\n        <div className='half'>\n          <pre>\n            <code>\n              {`\n    <ProgressBarLine\n      trailWidth={2}\n    />`}\n            </code>\n          </pre>\n        </div>\n        <div className='half half-example'>\n          <div id='svg-container'>\n            <ProgressBarLine trailWidth={2} />\n          </div>\n        </div>\n      </div>\n      <div className='container'>\n        <div className='half'>\n          <pre>\n            <code>\n              {`\n    <ProgressBarLine\n      value={75}\n      flip\n    />`}\n            </code>\n          </pre>\n        </div>\n        <div className='half half-example'>\n          <div id='svg-container'>\n            <ProgressBarLine value={75} flip />\n          </div>\n        </div>\n      </div>\n      <div className='container'>\n        <div className='half'>\n          <pre>\n            <code>\n              {`\n    <ProgressBarLine\n      text='Custom Text 😄'\n    />`}\n            </code>\n          </pre>\n        </div>\n        <div className='half half-example'>\n          <div id='svg-container'>\n            <ProgressBarLine text='Custom Text 😄' />\n          </div>\n        </div>\n      </div>\n      <div className='container'>\n        <div className='half'>\n          <pre>\n            <code>\n              {`\n    <ProgressBarLine\n      value={25}\n      min={0}\n      max={100}\n      strokeWidth={5}\n      trailWidth={5}\n      styles={{\n        path: {\n          stroke: '#17b978'\n        },\n        trail: {\n          stroke: '#a7ff83'\n        },\n        text: {\n          fill: '#404040',\n          textAlign: 'center',\n          fontSize: '32px'\n        }\n      }}\n    />`}\n            </code>\n          </pre>\n        </div>\n        <div className='half half-example'>\n          <div id='svg-container'>\n            <ProgressBarLine\n              value={25}\n              min={0}\n              max={100}\n              strokeWidth={5}\n              trailWidth={5}\n              styles={{\n                path: {\n                  stroke: '#17b978'\n                },\n                trail: {\n                  stroke: '#a7ff83'\n                },\n                text: {\n                  fill: '#404040',\n                  textAlign: 'center',\n                  fontSize: '32px'\n                }\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}