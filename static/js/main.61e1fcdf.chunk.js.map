{"version":3,"sources":["../../src/constants.js","../../src/config/theme.js","../../src/components/Svg.js","../../src/hooks/usePath.js","../../src/hooks/useStrokeDashOffset.js","../../src/components/Path.js","../../src/components/Text.js","../../src/components/ProgressBarLine.js","../../src/utils.js","../../src/index.js","App.js","index.js"],"names":["theme","base","path","stroke","strokeLinecap","trail","text","fill","textAlign","fontSize","StyledSvg","styled","Svg","strokeWidth","viewBox","usePath","trailWidth","React","center","Math","setDraw","pathEl","setDashArray","dashArray","dashOffset","parseInt","value","setDashOffset","useStrokeDashOffset","min","max","children","PropTypes","isRequired","StyledPath","props","Path","getStrokeWidth","ref","d","strokeDashArray","strokeDashOffset","StyledText","Text","renderText","number","ProgressBarLine","styles","safeValue","propValue","calculateSafeValue","setValue","Object","ExampleComponent","className","App","id","ReactDOM","render","document","getElementById"],"mappings":"kuBAAO,I,ECADA,EAAQ,CACZC,KADY,GAEZC,KAAM,CACJC,OADI,UAEJC,cAAe,QAEjBC,MAAO,CACLF,OADK,UAELC,cAAe,QAEjBE,KAAM,CACJC,KADI,UAEJC,UAFI,SAGJC,SAAU,SCPRC,EAAYC,IAAH,gBAKTC,EAAM,SAAC,GAA8B,IAA9B,EAA8B,EAA9B,SAAYC,EAAkB,EAAlBA,YACvB,OACE,qBAAWC,QAAO,cFbf,IEae,YAA0BD,IAD9C,ICNa,SAASE,EAAQ,GAA8C,IAA9C,EAA8C,EAA9C,MAA8C,EAA9C,MAA8C,EAA9C,QAA8C,EAA9C,YAAgCC,EAAc,EAAdA,WAAc,EAC1CC,aAAlC,GAD4E,mBACtE,EADsE,KACtE,EADsE,OAEpDA,aAAxB,IAF4E,mBAEtE,EAFsE,KAEtE,EAFsE,KAyB5E,OArBAA,eAAgB,WACd,IAAMC,GACHL,IACGM,WADHN,GAEGM,WAFJ,IADF,EAKAC,EAAQ,aAAD,OHdJ,EGcI,YACaF,EADb,qBHbJ,IGaI,YAEaA,EAFb,aAIN,CAACL,EAVJI,IAqBA,CATY,iBACTI,YACC,OAAIA,GACFC,EAAaD,EAAbC,oBAGJ,CANF,IASO,KAAP,mBC7Ba,SAA6B,GAA2B,IAA3B,EAA2B,EAA3B,MAA2B,EAA3B,MAAcC,EAAa,EAAbA,UAAa,EACjCN,aAApC,GADqE,mBAC/D,EAD+D,KAC/D,EAD+D,KAQrE,OALAA,eAAgB,WACd,IAAMO,EAAaL,SAASI,EAAYE,SAASC,EAAjD,KACAC,OACC,CAACD,EAHJT,IAKO,CAAP,GDyBKW,CAAoB,CAAEC,MAAKC,MAAKJ,QAAOH,gBDhB9CX,YAAgB,CACdmB,SAAUC,SAAeC,Y,MGdrBC,EAAavB,IAAH,iBACJ,gBAAC,EAAD,EAAC,MAAD,SAAUN,MACVL,QAAH,OAAwBA,OAFjB,UAGI,gBAAC,EAAD,EAAC,MAAD,SAAUK,MAClBL,QAAH,cAA+BA,OAJxB,iBAKOmC,YAAD,OAAWA,EALjB,mBAMQA,YAAD,OAAWA,EANlC,oBASMC,EAAO,SAAC,GAAwD,IAAxD,EAAwD,EAAxD,QAAwD,EAAxD,MAAwD,EAAxD,MAAwD,EAAxD,cAAwD,EAAxD,MAAuCpB,EAAiB,EAAjBA,WAAiB,EACbD,EAAQ,CAC7Dc,MACAC,MACAJ,QACAb,cACAG,eANkE,mBAC9D,EAD8D,KAC9D,EAD8D,KAC9D,EAD8D,KAC9D,EAD8D,KAS9DqB,EAAiB,aAAc,WACnC,SACSrB,OAAP,EAEF,IACC,CAACX,EAAOW,EALX,IAOA,OACE,qBACEsB,IADF,EAEEC,EAFF,EAGEC,gBAHF,EAIEC,iBAJF,EAKE5B,YALF,EAMER,MAAOA,KAKb+B,eAAoB,CAClBvB,YADkB,EAElBG,WAFkB,EAGlBX,OAAO,GAGT+B,YAAiB,CACfvB,YAAamB,IADE,OAEf3B,MAAO2B,IAFQ,KAGfN,MAAOM,cAAoB,CAACA,IAAD,OAAmBA,cAAvCA,U,MChDHU,EAAa/B,IAAH,iBACJwB,YAAD,OAAWA,aADN,QAGCA,YAAD,OAAWA,aAHX,aAIAA,YAAD,OAAWA,aAJ1B,YAOMQ,EAAO,SAAC,GAAoB,IAApB,EAAoB,EAApB,KAAQjB,EAAY,EAAZA,MACdkB,EAAatC,GAAQ,GAAJ,OAAOa,WAA9B,GAAuB,KAEvB,OAAO,yBAAP,IAGFwB,eAAoB,CAClBrC,KAAM,IAGRqC,YAAiB,CACfrC,KAAM0B,cAAoB,CAACA,IAAD,OAAmBA,IAD9B,OAEfN,MAAOM,IAAUa,QCVnB,IAAMC,EAAkB,SAAC,GAQnB,IARmB,EAQnB,EAPJpB,MADuB,EAQnB,EARmB,MAQnB,EARmB,MAQnB,EARmB,cAQnB,EARmB,aAQnB,EARmB,KAOvBqB,EACI,EADJA,OACI,EACsB9B,aAA1B,GADI,mBACE,EADF,KACE,EADF,KAGJA,eAAgB,WACd,IAAM+B,ECzBwB,SAAC,GAA4B,IAA5B,EAA4B,EAA5B,MAA4B,EAA5B,IAAYC,EAAgB,EAAhBA,UAC7C,OAAIA,GAAJ,EACE,EAEEA,GAAJ,EACE,EAEEA,MAAoBA,GAAxB,EACE,OADF,EDkBoBC,CAAmB,CAAErB,MAAKC,MAAKmB,cACjDE,EPvBG,KOuBQH,EAAD,IAAmClB,EAA7CqB,MACC,CAHHlC,IAKA,IAAMjB,EAAQoD,mBAAd,GAEA,OACE,uBAAepD,MAAOA,GACpB,qBAAMM,KAAN,EAAkBoB,MAAOA,IACzB,qBAAKb,YAAaA,GAChB,qBACER,OADF,EAEEqB,MPlCH,IOmCGG,IAHF,EAIEC,IAJF,EAKEjB,YALF,EAMEG,WAAYA,IAEd,qBACEU,MADF,EAEEG,IAFF,EAGEC,IAHF,EAIEjB,YAJF,EAKEG,WAAYA,OAOtB8B,eAA+B,CAC7BpB,MAD6B,GAE7BG,IAF6B,EAG7BC,IAH6B,IAI7BjB,YAJ6B,EAK7BG,WAAY,GAGd8B,YAA4B,CAC1BpB,MAAOM,cAAoB,CAACA,IAAD,OAAmBA,cAAvCA,SADmB,WAG1BH,IAAKG,IAHqB,OAI1BF,IAAKE,IAJqB,OAK1BnB,YAAamB,IALa,OAM1BhB,WAAYgB,IAAUa,Q,oCE/DXQ,EAAmB,SAAC,GAAa,IAAX/C,EAAW,EAAXA,KACjC,OAAO,yBAAKgD,UAAWP,GAAvB,ICqKaQ,G,MAvKH,WACV,OACE,oCACE,kBAAC,EAAD,CAAkBjD,KAAK,0BACvB,yBAAKgD,UAAU,aACb,yBAAKA,UAAU,QACb,6BACE,oFAQJ,yBAAKA,UAAU,qBACb,yBAAKE,GAAG,iBACN,kBAAC,EAAD,CAAiB9B,MAAO,QAI9B,yBAAK4B,UAAU,aACb,yBAAKA,UAAU,QACb,6BACE,qHAUJ,yBAAKA,UAAU,qBACb,yBAAKE,GAAG,iBACN,kBAAC,EAAD,CAAiB9B,MAAO,GAAIG,IAAK,GAAIC,IAAK,SAIhD,yBAAKwB,UAAU,aACb,yBAAKA,UAAU,QACb,6BACE,qHAUJ,yBAAKA,UAAU,qBACb,yBAAKE,GAAG,iBACN,kBAAC,EAAD,CAAiB9B,MAAO,IAAKG,IAAK,EAAGC,IAAK,SAIhD,yBAAKwB,UAAU,aACb,yBAAKA,UAAU,QACb,6BACE,0FAQJ,yBAAKA,UAAU,qBACb,yBAAKE,GAAG,iBACN,kBAAC,EAAD,CAAiB3C,YAAa,QAIpC,yBAAKyC,UAAU,aACb,yBAAKA,UAAU,QACb,6BACE,wFAQJ,yBAAKA,UAAU,qBACb,yBAAKE,GAAG,iBACN,kBAAC,EAAD,CAAiBxC,WAAY,OAInC,yBAAKsC,UAAU,aACb,yBAAKA,UAAU,QACb,6BACE,yGAQJ,yBAAKA,UAAU,qBACb,yBAAKE,GAAG,iBACN,kBAAC,EAAD,CAAiBlD,KAAK,gCAI5B,yBAAKgD,UAAU,aACb,yBAAKA,UAAU,QACb,6BACE,qaAyBJ,yBAAKA,UAAU,qBACb,yBAAKE,GAAG,iBACN,kBAAC,EAAD,CACE9B,MAAO,GACPG,IAAK,EACLC,IAAK,IACLjB,YAAa,EACbG,WAAY,EACZ+B,OAAQ,CACN7C,KAAM,CACJC,OAAQ,WAEVE,MAAO,CACLF,OAAQ,WAEVG,KAAM,CACJC,KAAM,UACNC,UAAW,SACXC,SAAU,iBC3J5BgD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.61e1fcdf.chunk.js","sourcesContent":["export const VIEWBOX_WIDTH = 100\nexport const VIEWBOX_HEIGHT = 100\nexport const VIEWBOX_X1 = 0\nexport const VIEWBOX_X2 = 100\n","const theme = {\n  base: {},\n  path: {\n    stroke: '#01a09e',\n    strokeLinecap: 'butt'\n  },\n  trail: {\n    stroke: '#d6d6d6',\n    strokeLinecap: 'butt'\n  },\n  text: {\n    fill: '#01a09e',\n    textAlign: 'center',\n    fontSize: '16px'\n  }\n}\n\nexport default theme\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { VIEWBOX_WIDTH } from '../constants'\n\nconst StyledSvg = styled.svg`\n  width: 100%;\n  display: block;\n`\n\nconst Svg = ({ children, strokeWidth }) => {\n  return (\n    <StyledSvg viewBox={`0 0 ${VIEWBOX_WIDTH} ${strokeWidth}`}>\n      {children}\n    </StyledSvg>\n  )\n}\n\nSvg.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default Svg\n","import React from 'react'\n\nimport useStrokeDashOffset from './useStrokeDashOffset'\n\nimport { VIEWBOX_X1, VIEWBOX_X2 } from '../constants'\n\nexport default function usePath({ min, max, value, strokeWidth, trailWidth }) {\n  const [dashArray, setDashArray] = React.useState(max)\n  const [draw, setDraw] = React.useState('')\n\n  React.useEffect(() => {\n    const center =\n      (strokeWidth > trailWidth\n        ? Math.max(strokeWidth, trailWidth)\n        : Math.min(strokeWidth, trailWidth)) / 2\n\n    setDraw(`\n      M ${VIEWBOX_X1},${center}\n      L ${VIEWBOX_X2},${center}\n    `)\n  }, [strokeWidth, trailWidth])\n\n  const ref = React.useCallback(\n    (pathEl) => {\n      if (pathEl !== null) {\n        setDashArray(pathEl.getTotalLength())\n      }\n    },\n    [draw]\n  )\n\n  return [\n    ref,\n    draw,\n    dashArray,\n    ...useStrokeDashOffset({ min, max, value, dashArray })\n  ]\n}\n","import React from 'react'\n\nexport default function useStrokeDashOffset({ min, value, dashArray }) {\n  const [dashOffset, setDashOffset] = React.useState(min)\n\n  React.useEffect(() => {\n    const dashOffset = Math.abs(dashArray - parseInt(value, 10))\n    setDashOffset(dashOffset)\n  }, [value, dashArray])\n\n  return [dashOffset]\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport usePath from '../hooks/usePath'\n\nconst StyledPath = styled.path`\n  stroke: ${({ theme, trail }) =>\n    trail ? theme.trail.stroke : theme.path.stroke};\n  stroke-linecap: ${({ theme, trail }) =>\n    trail ? theme.trail.strokeLinecap : theme.path.strokeLinecap};\n  stroke-dasharray: ${(props) => props.strokeDashArray};\n  stroke-dashoffset: ${(props) => props.strokeDashOffset};\n`\n\nconst Path = ({ value, min, max, strokeWidth, trail, trailWidth }) => {\n  const [ref, draw, strokeDashArray, strokeDashOffset] = usePath({\n    min,\n    max,\n    value,\n    strokeWidth,\n    trailWidth\n  })\n\n  const getStrokeWidth = React.useMemo(() => {\n    if (trail) {\n      return trailWidth >= strokeWidth ? strokeWidth : trailWidth\n    }\n    return strokeWidth\n  }, [trail, trailWidth, strokeWidth])\n\n  return (\n    <StyledPath\n      ref={ref}\n      d={draw}\n      strokeDashArray={strokeDashArray}\n      strokeDashOffset={strokeDashOffset}\n      strokeWidth={getStrokeWidth}\n      trail={trail}\n    />\n  )\n}\n\nPath.defaultProps = {\n  strokeWidth: 2,\n  trailWidth: 2,\n  trail: false\n}\n\nPath.propTypes = {\n  strokeWidth: PropTypes.number,\n  trail: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.PropTypes.number])\n}\n\nexport default Path\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst StyledText = styled.span`\n  color: ${(props) => props.theme.text.fill};\n  display: block;\n  text-align: ${(props) => props.theme.text.textAlign};\n  font-size: ${(props) => props.theme.text.fontSize};\n`\n\nconst Text = ({ text, value }) => {\n  const renderText = text || `${Math.round(value)}%`\n\n  return <StyledText>{renderText}</StyledText>\n}\n\nText.defaultProps = {\n  text: ''\n}\n\nText.propTypes = {\n  text: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  value: PropTypes.number\n}\n\nexport default Text\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { ThemeProvider } from 'styled-components'\n\nimport { VIEWBOX_X2 } from '../constants'\n\nimport baseStyles from '../config/theme'\nimport { calculateSafeValue } from '../utils'\n\nimport Svg from './Svg'\nimport Path from './Path'\nimport Text from './Text'\n\nconst ProgressBarLine = ({\n  value: propValue,\n  min,\n  max,\n  strokeWidth,\n  trailWidth,\n  text,\n  styles\n}) => {\n  const [value, setValue] = React.useState(max)\n\n  React.useEffect(() => {\n    const safeValue = calculateSafeValue({ min, max, propValue })\n    setValue(((safeValue - min) * VIEWBOX_X2) / (max - min))\n  }, [propValue])\n\n  const theme = Object.assign({}, baseStyles, styles)\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Text text={text} value={value} />\n      <Svg strokeWidth={strokeWidth}>\n        <Path\n          trail\n          value={VIEWBOX_X2}\n          min={min}\n          max={max}\n          strokeWidth={strokeWidth}\n          trailWidth={trailWidth}\n        />\n        <Path\n          value={value}\n          min={min}\n          max={max}\n          strokeWidth={strokeWidth}\n          trailWidth={trailWidth}\n        />\n      </Svg>\n    </ThemeProvider>\n  )\n}\n\nProgressBarLine.defaultProps = {\n  value: 50,\n  min: 0,\n  max: 100,\n  strokeWidth: 5,\n  trailWidth: 5\n}\n\nProgressBarLine.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.PropTypes.number])\n    .isRequired,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  strokeWidth: PropTypes.number,\n  trailWidth: PropTypes.number\n}\n\nexport default ProgressBarLine\n","export const calculateSafeValue = ({ min, max, propValue }) => {\n  if (propValue >= max) {\n    return max\n  }\n  if (propValue <= min) {\n    return min\n  }\n  if (propValue >= min || propValue <= max) {\n    return propValue\n  }\n}\n","import React from 'react'\n\nimport ProgressBarLine from './components/ProgressBarLine'\n\nimport styles from './styles.module.css'\n\nexport const ExampleComponent = ({ text }) => {\n  return <div className={styles.test}>{text}</div>\n}\n\nexport { ProgressBarLine }\n","import React from 'react'\n\nimport { ExampleComponent, ProgressBarLine } from 'react-progressbar-line'\nimport 'react-progressbar-line/dist/index.css'\n\nconst App = () => {\n  return (\n    <>\n      <ExampleComponent text='React ProgressBarLine' />\n      <div className='container'>\n        <div className='half'>\n          <pre>\n            <code>\n              {`\n    <ProgressBarLine\n      value={75}\n    />`}\n            </code>\n          </pre>\n        </div>\n        <div className='half half-example'>\n          <div id='svg-container'>\n            <ProgressBarLine value={75} />\n          </div>\n        </div>\n      </div>\n      <div className='container'>\n        <div className='half'>\n          <pre>\n            <code>\n              {`\n    <ProgressBarLine\n      value={75}\n      min={50}\n      max={100}\n    />`}\n            </code>\n          </pre>\n        </div>\n        <div className='half half-example'>\n          <div id='svg-container'>\n            <ProgressBarLine value={75} min={50} max={100} />\n          </div>\n        </div>\n      </div>\n      <div className='container'>\n        <div className='half'>\n          <pre>\n            <code>\n              {`\n    <ProgressBarLine\n      value={125}\n      min={0}\n      max={200}\n    />`}\n            </code>\n          </pre>\n        </div>\n        <div className='half half-example'>\n          <div id='svg-container'>\n            <ProgressBarLine value={125} min={0} max={200} />\n          </div>\n        </div>\n      </div>\n      <div className='container'>\n        <div className='half'>\n          <pre>\n            <code>\n              {`\n    <ProgressBarLine\n      strokeWidth={10}\n    />`}\n            </code>\n          </pre>\n        </div>\n        <div className='half half-example'>\n          <div id='svg-container'>\n            <ProgressBarLine strokeWidth={10} />\n          </div>\n        </div>\n      </div>\n      <div className='container'>\n        <div className='half'>\n          <pre>\n            <code>\n              {`\n    <ProgressBarLine\n      trailWidth={2}\n    />`}\n            </code>\n          </pre>\n        </div>\n        <div className='half half-example'>\n          <div id='svg-container'>\n            <ProgressBarLine trailWidth={2} />\n          </div>\n        </div>\n      </div>\n      <div className='container'>\n        <div className='half'>\n          <pre>\n            <code>\n              {`\n    <ProgressBarLine\n      text='Custom Text 😄'\n    />`}\n            </code>\n          </pre>\n        </div>\n        <div className='half half-example'>\n          <div id='svg-container'>\n            <ProgressBarLine text='Custom Text 😄' />\n          </div>\n        </div>\n      </div>\n      <div className='container'>\n        <div className='half'>\n          <pre>\n            <code>\n              {`\n    <ProgressBarLine\n      value={25}\n      min={0}\n      max={100}\n      strokeWidth={5}\n      trailWidth={5}\n      styles={{\n        path: {\n          stroke: '#17b978'\n        },\n        trail: {\n          stroke: '#a7ff83'\n        },\n        text: {\n          fill: '#404040',\n          textAlign: 'center',\n          fontSize: '32px'\n        }\n      }}\n    />`}\n            </code>\n          </pre>\n        </div>\n        <div className='half half-example'>\n          <div id='svg-container'>\n            <ProgressBarLine\n              value={25}\n              min={0}\n              max={100}\n              strokeWidth={5}\n              trailWidth={5}\n              styles={{\n                path: {\n                  stroke: '#17b978'\n                },\n                trail: {\n                  stroke: '#a7ff83'\n                },\n                text: {\n                  fill: '#404040',\n                  textAlign: 'center',\n                  fontSize: '32px'\n                }\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}